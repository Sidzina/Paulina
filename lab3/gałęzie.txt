
zasady dzia³ania ga³êzi w systemie git
Operowanie ga³êziami, proste przypadki

Wed³ug konwencji, lokalny aktualny katalog roboczy w gicie jest nazywany "master". To jest po prostu nazwa 
ga³êzi, któr¹ git tworzy, kiedy zaczniesz puste repozytorium. Mo¿esz j¹ usun¹æ jeœli nie podoba Ci siê nazwa.
Jeœli tworzysz swoje repozytorium przez klonowanie czyjegoœ repozytorium, zdalna ga³¹Ÿ "master" jest kopiowana 
na lokaln¹ ga³¹Ÿ nazwan¹ "origin". Mo¿esz mieæ swoj¹ w³asn¹ ga³¹Ÿ "master", która nie jest przywi¹zana do 
zdalnego repozytorium.
Istnieje zawsze aktualna g³owica, zwana HEAD. (Aktualnie jest to link symboliczny, .git/HEAD, do pliku takiego 
jak refs/heads/master.) Git wymaga aby to zawsze wskazywa³o do katalogu refs/heads.

Nazwa domyœlnej ga³êzi rozwoju w systemie git
master

wskaŸnik HEAD
HEAD zwyk³ byæ Uniksowym symlinkiem, i nadal mo¿e byæ tak postrzegany, ale aby obs³ugiwaæ systemy firmy 
Microsoft, to jest teraz tym co jest nazywane "symboliczna referencja" lub symref i jest prostym plikiem 
zawieraj¹cym "ref: refs/heads/master". Git traktuje to tak jak symlink. Istnieje pomocnik git-update-ref, który 
je zapisuje.
Podczas gdy HEAD musi wskazywaæ na refs/heads, legalnym jest wskazywanie na nieistniej¹cy plik. To w³aœnie siê 
dzieje przed pierwszym zatwierdzeniem w ca³kowicie nowym repozytorium.
Kiedy wykonujesz "git commit", nowy obiekt zatwierdzenia jest tworzony ze starym HEAD jako przodkiem, a nowe 
zatwierdzenie jest zapisywane do aktualnej g³owicy (wskazywanej przez HEAD).


POlecenia zwi¹zane z ga³êziami
Stworzenie ga³êzi (stworzy i prze³¹czy do nowej ga³êzi o podanej nazwie. To jest odpowiednik do):
git checkout [-f|-m] -b <ga³¹Ÿ> [wersja]
git branch <ga³¹Ÿ> [<wersja>]
git checkout [-f|-m] <ga³¹Ÿ>
Kasowanie ga³êzi:
git branch -d <g³owica> (Kasuje podan¹ <g³owicê>, ale najpierw sprawdza, czy zatwierdzenie jest osi¹galne w 
inny sposób. To znaczy scali³eœ gdzieœ ga³¹Ÿ lub nigdy nie robi³eœ edycji na tej ga³êzi.)
Jeœli potrzebujesz nadpisaæ aktualn¹ G£OWICÊ z pewnego powodu, narzêdzie aby to zrobiæ to "git reset". Istniej¹ 
trzy poziomy resetu:
git reset --soft <g³owica>